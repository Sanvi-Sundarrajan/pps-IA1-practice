unable to run, main file "main.c" not found
 gcc -g p6original.c
 gbd a.out
bash: gbd: command not found
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
unable to run, main file "main.c" not found
 gcc -g p7original.c
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...
(gdb) run
Starting program: /home/a.out 

Breakpoint 1, main () at main.c:78
78          int n = get_n ();
(gdb) step
get_n () at main.c:28
28      {
(gdb) next
30        printf("Enter the number of complex numbers\n");
(gdb) next
Enter the number of complex numbers
31        scanf("%d",&n);
(gdb) next
2
32        return n;
(gdb) next
33      }
(gdb) p n
$1 = 2
(gdb) n
main () at main.c:79
79          Complex c[n],result;
(gdb) s
80          input_n_complex ( n, c);
(gdb) s
input_n_complex (n=32767, c=0x7fffffffeb70) at main.c:44
44      {
(gdb) n
46        for (i=0;i<n;i++)
(gdb) n
47          c[i]=input_complex ();
(gdb) n
Enter complex number
2 3
46        for (i=0;i<n;i++)
(gdb) p c
$2 = (Complex *) 0x7fffffffeb60
(gdb) p c[0]
$3 = {real = 2, imaginary = 3}
(gdb) next
47          c[i]=input_complex ();
(gdb) next
Enter complex number
4 5 
46        for (i=0;i<n;i++)
(gdb) p c[1]
$4 = {real = 4, imaginary = 5}
(gdb) next
48      }
(gdb) next
main () at main.c:81
81          result=add_n_complex ( n, c);
(gdb) step
add_n_complex (n=2, c=0x5555555550c0 <_start>) at main.c:59
59      {
(gdb) next
62        r.real = 0;
(gdb) next
63        r.imaginary =0;
(gdb) next
64        for(i=0;i<n;i++)
(gdb) next
65          r= add(r,c[i]);
(gdb) next
64        for(i=0;i<n;i++)
(gdb) p r[0]
Structure has no component named operator[].
(gdb) p r
$5 = {real = 2, imaginary = 3}
(gdb) next
65          r= add(r,c[i]);
(gdb) next
64        for(i=0;i<n;i++)
(gdb) p r
$6 = {real = 6, imaginary = 8}
(gdb) n
66      }
(gdb) n
main () at main.c:82
82          output ( n, c,result);
(gdb) s
output (n=2, c=0x7fffffffeb60, result=...) at main.c:69
69      {
(gdb) n
71        for (i = 0; i < n; i++)
(gdb) n
72          printf("%f + %fi\n", c[i].real, c[i].imaginary);
(gdb) n
2.000000 + 3.000000i
71        for (i = 0; i < n; i++)
(gdb) n
72          printf("%f + %fi\n", c[i].real, c[i].imaginary);
(gdb) n
4.000000 + 5.000000i
71        for (i = 0; i < n; i++)
(gdb) n
73        printf("+ %f + %fi is %f + %fi\n", c[n-1].real, c[n-1].imaginary, result.real, result.imaginary);
(gdb) n
+ 4.000000 + 5.000000i is 6.000000 + 8.000000i
74      }
(gdb) n
main () at main.c:83
83          return 0;
(gdb) n
84      }
(gdb) c
Continuing.
[Inferior 1 (process 3016) exited normally]
(gdb) 